<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gedi.projectmanagement.dao.ProjectPlanMapper">
    <resultMap id="BaseResultMap" type="com.gedi.projectmanagement.model.ProjectPlan">
        <id column="p_id" property="pId" jdbcType="VARCHAR"/>
        <result column="p_name" property="pName" jdbcType="VARCHAR"/>
        <result column="p_start_time" property="pStartTime" jdbcType="VARCHAR"/>
        <result column="p_end_time" property="pEndTime" jdbcType="VARCHAR"/>
        <result column="p_project_phase_id" property="pProjectPhaseId" jdbcType="INTEGER"/>
        <result column="p_progress" property="pProgress" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="creater" property="creater" jdbcType="VARCHAR"/>
        <result column="annual_time" property="annualTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    p_id, p_name, p_start_time, p_end_time, p_project_phase_id, p_progress, create_time,
    creater, annual_time
    </sql>

    <!-- 根据ID查询用于项目总体计划列表展示 -->
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
            p_id,
            p_name,
            p_start_time,
            p_end_time,
            p_project_phase_id,
            p_progress,
            create_time,
            creater,
            annual_time
        from project_plan
        ORDER BY p_start_time DESC
  </select>

    <!-- 新增项目总计划 -->
    <insert id="addProject">
        insert into project_plan
        (p_id, p_name,
        p_start_time,
        p_end_time,
        p_project_phase_id,
        p_progress,
        create_time,
        creater,
        annual_time
        )
        values
            (#{pId,jdbcType=VARCHAR},
            #{pName,jdbcType=VARCHAR},
            #{pStartTime,jdbcType=DATE},
            #{pEndTime,jdbcType=DATE},
            #{pProjectPhaseId,jdbcType=INTEGER},
            #{pProgress,jdbcType=INTEGER},
            NOW(),
            #{creater,jdbcType=VARCHAR},
            #{annualTime,jdbcType=VARCHAR}
            )
    </insert>


    <!-- 根据pName模糊查询项目总体计划列表展示 -->
    <select id="selectBypName" resultMap="BaseResultMap" parameterType="com.gedi.projectmanagement.model.ProjectPlan">
        select
        p_id,
        p_name,
        p_start_time,
        p_end_time,
        p_project_phase_id,
        p_progress,
        create_time,
        creater,
        annual_time
        from project_plan
        where 1=1
        <if test="projectPlan != null and projectPlan.pName != null and projectPlan.pName != ''">
            and project_plan.p_name LIKE concat('%',#{projectPlan.pName},'%')
        </if>
        <if test="projectPlan != null and projectPlan.annualTime != null and projectPlan.annualTime != ''">
            and project_plan.annual_time LIKE concat('%',#{projectPlan.annualTime},'%')
        </if>
        <if test="projectPlan != null and projectPlan.pProjectPhaseId != null and projectPlan.pProjectPhaseId != ''">
            and project_plan.p_project_phase_id LIKE concat('%',#{projectPlan.pProjectPhaseId},'%')
        </if>
        ORDER BY p_start_time DESC
    </select>

    <!-- 根据pId和pProjectPhase查询用于项目总体计划清单列表展示 -->
    <select id="selectProjectPlanListByPidAndpProjectPhaseId" resultType="ProjectPlanList">
        SELECT
            tps.pProjectPhaseId,
            tps.tName,
            tps.tId,
            tps.tsId,
            tps.tsName,
            tps.aName,
            tps.sortId,
            tt.a_id AS aId,
            tt.a_pstart_time AS apsTime,
            tt.a_pend_time AS apeTime,
            tt.a_astart_time AS aasTime,
            tt.a_aend_time AS aaeTime,
            tt.a_percentage AS percentage,
            tt.a_state AS state,
            tt.a_is_result AS isResult,
            tt.p_id AS pId,
            pum.user_id AS userId,
            u.name AS username
          from (
            SELECT DISTINCT
                tc.p_project_phase_id AS pProjectPhaseId,
                tc.t_name AS tName,
                tc.t_id AS tId,
                ts.ts_id AS tsId,
                ts.ts_name AS tsName,
                ta.aName AS aName,
                tc.sort_id AS sortId
            FROM task_class tc
            LEFT JOIN task_subclass ts ON ts.t_id = tc.t_id
            LEFT JOIN action_item ai ON ts.ts_id = ai.ts_id
            LEFT JOIN (
                SELECT a.a_id,a.a_name from action_item a
                LEFT JOIN project_plan p ON a.p_id = p.p_id
                where a.p_id = #{pId} and a.p_project_phase_id = #{pProjectPhaseId}
            )tp on ai.a_name = tp.a_name and ai.p_id = #{pId}
            LEFT JOIN (
                SELECT a.a_name AS aName,a.ts_id,a.p_project_phase_id from action_item a
            )ta on ta.ts_id = ts.ts_id
           where ta.p_project_phase_id = #{pProjectPhaseId}
        )tps
        LEFT JOIN (
            SELECT a.* from action_item a
            LEFT JOIN project_plan p ON a.p_id = p.p_id
            where a.p_id = #{pId} and a.p_project_phase_id = #{pProjectPhaseId}
        )tt on tps.aName = tt.a_name and tt.p_id = #{pId}
        LEFT JOIN project_user_medium pum ON tt.a_id = pum.a_id
        LEFT JOIN `user` u ON pum.user_id = u.user_id
        ORDER BY
        field(
            tps.aName,
            '需求调研及梳理',
            '编写需求文档（用户版）',
            '业务原型草图',
            '确认需求文档（用户版）',
            '编写需求文档（开发版）',
            '确认需求文档（开发版）',
            '原型设计',
            '原型确定',
            '测试环境系统功能验证',
            '系统上线',
            '验收文档',
            '项目工作汇报',
            '数据指标清单表',
            '汇总整理所有涉及指标',
            '单个指标梳理文档',
            '汇总指标梳理过程问题',
            '汇总指标算法',
            '设计表结构',
            '评审表结构',
            '指标数据核查（每个）',
            '编写数据设计方案',
            '评审数据设计方案',
            '编写数据字典文档',
            '评审数据字典文档',
            '编写表数据逻辑关系',
            '评审表数据逻辑关系',
            'E-R图',
            '开发、测试',
            '开发、测试',
            '开发、测试',
            '开发、测试',
            '二次指标数据核查（每个）',
            'ETL程序开发',
            'ETL程序测试',
            '编写数据链路流转方案',
            '评审数据链路流转方案',
            '数据链路清单',
            '数据库设置',
            '开发环境搭建',
            '前后端开发（每个）',
            '前后端开发（每个）',
            '前后端联调（每个）',
            '测试用例编写',
            '系统功能测试',
            '系统回归测试',
            '生产环境搭建',
            '数据同步及联调',
            '生产环境发布'
        )
    </select>

    <!--查询所有得项目名称以及ID值-->
    <select id="selectAllProject" resultMap="BaseResultMap">
        SELECT p_name,p_id from project_plan
    </select>

    <update id="updateBypId">
        update project_plan
        set p_project_phase_id = #{projectPlan.pProjectPhaseId}
        where p_id = #{projectPlan.pId}
    </update>

    <!-- 根据pId删除项目总计划 -->
    <delete id="deleteProjectBypId" parameterType="String">
        delete from project_plan where p_id = #{pId}
    </delete>

    <!-- 根据年度时间查询项目总体计划 -->
    <select id="selectByTime" resultMap="BaseResultMap">
        select
        p_id,
        p_name,
        p_start_time,
        p_end_time,
        p_project_phase_id,
        p_progress,
        create_time,
        creater,
        annual_time
        from project_plan
        where 1=1
        <if test="annualTime != null or annualTime != ''">
            and annual_time = #{annualTime}
        </if>
        ORDER BY p_start_time DESC
    </select>

    <!-- 根据pId修改项目总计划 -->
    <update id="updateProjectBypId">
        update project_plan
        <set>
            <if test="projectPlan.pName != null and projectPlan.pName != ''">
                p_name = #{projectPlan.pName},
            </if>
            <if test="projectPlan.pStartTime != null and projectPlan.pStartTime != ''">
                p_start_time = #{projectPlan.pStartTime},
            </if>
            <if test="projectPlan.pEndTime != null and projectPlan.pEndTime != ''">
                p_end_time = #{projectPlan.pEndTime},
            </if>
            <if test="projectPlan.pProgress != null">
                p_progress = #{projectPlan.pProgress},
            </if>
            <if test="projectPlan.annualTime != null and projectPlan.annualTime != ''">
                annual_time = #{projectPlan.annualTime},
            </if>
        </set>
        where p_id = #{projectPlan.pId}
    </update>

</mapper>